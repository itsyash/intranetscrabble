<!DOCTYPE html>
<html>

  <style type="text/css">
  #myCanvas{
  border:3px solid green;
}

body{
   margin-left: 1em;
   background:black; 
}

  #myCanvas2{
   margin-left: 3em;

}

#heading{
color: #fff;
text-shadow: 0px -1px 4px white, 0px -2px 10px yellow, 0px -10px 20px #ff8000, 0px -18px 40px red;
font: 32px 'BlackJackRegular';
background:black;
padding-left:4em;
box-shadow:0 0 2em 2em black;
}

  </style>


<body>


<p id="heading">FireWord</p>
<canvas id="myCanvas" width="400" height="400">
Your browser does not support the HTML5 canvas tag.
</canvas>
<br><br>

<canvas id="myCanvas2" width="280" height="40">
Your browser does not support the HTML5 canvas tag.
</canvas>
<!--<p id="debug"></p>-->
<b><p id="turn"></p></b>



<button onclick="getWords()">Sure?</button>
<p id="words"></p>
<button id="sendw" onclick="check()">Submit word</button>
<div style="float:left;width:100px;border-right:1px solid black;height:300px;padding:10px;overflow:scroll-y;">
	<b>USERS</b>
	<div id="users"></div>
</div>
<div style="float:left;width:300px;height:250px;overflow:scroll-y;padding:10px;">
	<div id="conversation"></div>
	<input id="data" style="width:200px;" />
	<input type="button" id="datasend" value="send" />
</div>	
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script>
<script>

var states_dictionary={"A":1,"B":3,"C":3,"D":2,"E":1,"F":4,"G":2,"H":4,"I":1,"J":8,"K":5,"L":1,"M":3,"N":1,
			"O":1,"P":3,"Q":10,"R":1,"S":1,"T":1,"U":1,"V":4,"W":4,"X":8,"Y":4,"Z":10 };

//var deb=document.getElementById("debug");
//deb.innerHTML=states_dictionary["X"];


var board = new Array(10);
for (var i = 0; i < 10; i++) {
	board[i] = new Array(10);
}

var flag = new Array(10);
for (var i = 0; i < 10; i++) {
	flag[i] = new Array(10);
}

for(var i=0;i<10;i++)
for(var j=0;j<10;j++)
flag[i][j]=0;

var myDictionary;
var num_rows=10, num_cols=10;
var myvalue="";
var click=0;
var input=[];
var highlightx,highlighty;
var valueinserted=0;
var canvas = document.getElementById("myCanvas");
var context = canvas.getContext("2d");
var letters = new Array();
context.fillStyle = "rgb(0,0,0)";
context.fillRect(0,0,400,400); 
context.strokeStyle = "rgb(255,0,0)";
context.lineWidth = 2.5;
var mylettersx=[];
var mylettersy=[];
var mylet=[];
var yourscore=0;
var opponentscore=0;
var invalidflag=0;
var new_words= new Array();
var gamestart = false;

context.shadowOffsetX = 1; // set x offset for my shadow
context.shadowOffsetY = 1; // set y offset for my shadow
context.shadowBlur = 10;  // set blur intensity
context.shadowColor = "black";  // set blur color



for(y=0; y<num_cols; y++){  
	for(x=0; x<num_rows; x++){  
		context.strokeRect(x*40, y*40, 40, 40);  

	}  
}  

function getFile(fileName){
				var file = fileName;
   				 $.get(file,function(txt){
	txt=txt.toLowerCase();
	myDictionary = txt.split("\n");
	//alert(myDictionary[26000]);
    },'text'); 
}

 $(document).ready(function() {
    getFile('words.txt');      
});

$("#myCanvas").click(function(e){ 
		var x = Math.floor((e.pageX-$("#myCanvas").offset().left) / 40);  
		var y = Math.floor((e.pageY-$("#myCanvas").offset().top) / 40);   
		mylettersx.push(x);
		mylettersy.push(y);
		context.fillStyle = "blue";
		context.font = "bold 32px Arial";
		var index = ( (y * num_cols) + (x + 1) );
		if(index in letters){}
		else
		{	
		if(valueinserted==0)
		{
		mylet.push(myvalue);
		letters[index]=myvalue;

		context.fillText(myvalue, x*40+10, y*40+30);
		board[y][x]=myvalue;
		flag[y][x]=1;
		valueinserted++;
		//var p = document.getElementById("score");
		//p.innerHTML=myvalue;
		//var px = document.getElementById("x1");
		//px.innerHTML=x;
		//var py = document.getElementById("y1");
		//py.innerHTML=y;
		//var bb = document.getElementById("board");  
		//bb.innerHTML=board[y][x];
		}
		}


});

function updateBoard(board1,flag1){
	context.font = "bold 32px Arial";
	for(var i=0;i<10;i++){
		for(var j=0;j<10;j++){
			if(flag1[i][j]==1)
			{			
 
	
				//var index = ( (i * num_cols) + (j + 1) );
				//letters[index]=board1[i][j];
				flag[i][j]=1;
				board[i][j]=board1[i][j];
				context.fillText(board1[i][j], j*40+10, i*40+30);
			}
		}
	}
}	

function myFunction()
{
	var barray = document.getElementById("boardarray");
	var str1="";
	for (var i=0;i<10;i++){
		for(var j=0;j<10;j++) 
			str1+=board[i][j]+" ";
		str1+="<br>";			
	}
	barray.innerHTML=str1;
}

function getWords(){
	//alert("before blank "+gamestart);
	blank();
	//alert("after blank "+gamestart);
	var bword= document.getElementById("words");
	var str="";
	new_words=[];
	for(var i=0;i<10;i++){
		var word="";
		for(var j=0;j<10;j++){
			if(flag[i][j]==1)
			{
				//alert(i+" "+j+" "+flag[i][j]);
				word+=board[i][j];
				//alert("init "+word);
			}
			if(flag[i][j]==0||j==9){
			//	else{
				if(word.length>1)
				{
				//alert("word is "+word);
														if(input.indexOf(word) == -1){
																		
																								if(gamestart){				
																									//alert(word.length + "  " + mylettersx.length);		
																														if(word.length != mylettersx.length){
																														
																															input.push(word);
																															////alert(word);	
																					
																															new_words.push(word);
																															//str +=word +"<br>";
																														}
																														else{
																															//alert("incorrect position");
																															context.fillStyle = "blue";
																																context.font = "bold 32px Arial";
																															for(l=0;l<mylettersx.length;l++){
																																			//context.fillText("Y", mylettersx[l]*40+10, mylettersy[l]*40+30);
																																context.clearRect(mylettersx[l]*40, mylettersy[l]*40, 40, 40);
																									        context.strokeRect(mylettersx[l]*40, mylettersy[l]*40, 40, 40);	
																																	var ind = 		( (mylettersy[l] * num_cols) + (mylettersx[l] + 1) );
																																		//alert("index="+ind);
																																		delete letters[ind];	
context.fillStyle = "blue";
context.font = "bold 32px Arial";
//context.fillText("P", mylettersx[l]*40+10, mylettersy[l]*40+30);//tested, x should be first
flag[mylettersx[l]][mylettersy[l]]=0;																															
																																}																															
																															
																															
																															}
																								}
																								else{
																												
																															input.push(word);
																															////alert(word);	
																					
																															new_words.push(word);
																														
																								}
															}		
															else{
																								//alert("duplicate " + word);
																							
																						
																																				

															}							
						}
						else{
							//	alert("invalid: one length word " + mylettersx.length);
											//context.fillStyle = "blue";
																																//context.font = "bold 32px Arial";
																														
																																//			context.fillText("Y", mylettersx[0]*40+10, mylettersy[0]*40+30);
																																			
																																//context.clearRect(mylettersx[0]*40, mylettersy[0]*40, 40, 40);
																									        //context.strokeRect(mylettersx[0]*40, mylettersy[0]*40, 40, 40);	
																																	//var ind = 		( (mylettersy[0] * num_cols) + (mylettersx[0] + 1) );
																																		//alert("index="+ind);
																																		//delete letters[ind];						
						
						}
				word="";
			}
		}
	}

	str+=word+"<br>";

	for(var j=0;j<10;j++){
		var word="";
		for(var i=0;i<10;i++){
			if(flag[i][j]==1)
			{
				//alert(i+" "+j+" "+flag[i][j]);
				word+=board[i][j];
				//alert(word);
			}
			if(flag[i][j]==0||i==9){
				if(word.length>1)
				{
				input.push(word);
				//alert(word);
				str+=word+"  ";
				}
				word="";
			}
		}
	}
	var strin = new_words.join(" * ");
			bword.innerHTML=strin;
			if(!gamestart)
			{gamestart=true;}
			
}


function check(){
	for(var i=0;i<new_words.length;i++)
	{
		var wflag=0;
		for(var j=0;j<myDictionary.length;j++)
		{
			if(new_words[i].toLowerCase()==myDictionary[j])
			{
			//alert(new_words[i]+"  "+j+"  "+myDictionary[j]);
				wflag=1;
				invalidflag=0;
				//alert("present");
				break;
			}
		}
		if(wflag==0){
			invalidflag=1;
			
			//alert("Invalid word");

					context.fillStyle = "blue";
																																context.font = "bold 32px Arial";
																															for(l=0;l<mylettersx.length;l++){
																																			//context.fillText("Y", mylettersx[l]*40+10, mylettersy[l]*40+30); // tested, x should be before
																																context.clearRect(mylettersx[l]*40, mylettersy[l]*40, 40, 40);
																									       context.strokeRect(mylettersx[l]*40, mylettersy[l]*40, 40, 40);	
																																	var ind = ( (mylettersy[l] * num_cols) + (mylettersx[l] + 1) );
																																		//alert("index="+ind);
																																		delete letters[ind];

flag[mylettersy[l]][mylettersx[l]]=0;
board[mylettersy[l]][mylettersx[l]]="";


				
			
			}


	}

}
	mylettersx=[];
	mylettersy=[];
//alert(new_words[0].toString());

var str=new_words[0].toString();
var indi=input.indexOf(str);
//alert(input[ind].toString());
delete input[indi];

}

var canvas2 = document.getElementById("myCanvas2");
var context2 = canvas2.getContext("2d");
context2.strokeStyle = "rgb(255, 0, 0)";
context2.lineWidth = 0.5;

//$.dictionary( 'foo', [ 'example', {"strawberry":"Strawberry"} ] );	

var alphabets={1:"A",2:"B",3:"C",4:"D",5:"E",6:"F",7:"G",8:"H",9:"I",10:"J",11:"K",12:"L",13:"M",14:"N",15:"O",16:"P",17:"Q",18:"R",19:"S",20:"T",
			21:"U",22:"V",23:"W",24:"X",25:"Y",26:"Z"}

var values=[];
for(var i=0;i<7;i++){
		var num=Math.floor((Math.random()*26)+1);
		values.push(alphabets[num]);
}
		 


var i=0;
for(x=0; x<1; x++){  
	for(y=0; y<7; y++){  
		context2.strokeRect(y*40, x*40, 40, 40);  
		context2.fillStyle = "blue";
		context2.font = "bold 32px Arial";
		context2.fillText(values[y], y*40+10, x*40+30);
		if(i==5)i=0;
	}  
}

$("#myCanvas2").click(function(e){
		valueinserted=0;
		var x = Math.floor((e.pageX-$("#myCanvas2").offset().left) / 40);  
		var y = Math.floor((e.pageY-$("#myCanvas2").offset().top) / 40);   


		context2.lineWidth = 3.5;
		context2.strokeRect(x*40, y*40, 40, 40);

		//context.globalCompositeOperation = "destination-out";
		// context.strokeStyle = "rgba(255,255,2,0)";
		context2.lineWidth = 3.5;
		context2.clearRect(highlightx*40, highlighty*40, 40, 40);
		if(click>0)
		context2.fillText(values[highlightx%6], highlightx*40+10, highlighty*40+30);

		context2.strokeStyle = "rgb(255, 0, 0)"; 
		context2.lineWidth = 0.5;
		context2.strokeRect(highlightx*40, highlighty*40, 40, 40); 

		myvalue = values[x];
		highlightx=x , highlighty=y; 

		click++;

});	

</script>

<script src="/socket.io/socket.io.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.4/jquery.min.js"></script>
<script>
	var socket = io.connect('http://10.3.3.190:8082');
	// on connection to server, ask for user's name with an anonymous callback
	socket.on('connect', function(){
		// call the server-side function 'adduser' and send one parameter (value of prompt)
		socket.emit('adduser', prompt("What's your name?"));
	});

	// listener, whenever the server emits 'updatechat', this updates the chat body
	socket.on('updatechat', function (username, data) {
		$('#conversation').append('<b>'+username + ':</b> ' + data + '<br>');
	});

	socket.on('updateword', function (board1, flag1,opponent) {
		var x=document.getElementById("turn");
		x.innerHTML="Your turn!";
		//var y=document.getElementById("score2");
		//opponentscore=opponent;
		//y.innerHTML=opponentscore;
		alert("hi word update");
		//alert(board1[0][0]);
		updateBoard(board1,flag1);
	});

	// listener, whenever the server emits 'updateusers', this updates the username list
	socket.on('updateusers', function(data) {
		$('#users').empty();
		$.each(data, function(key, value) {
			$('#users').append('<div>' + key + '</div>');
		});
	});

	// on load of page
	$(function(){
		// when the client clicks SEND
		$('#datasend').click( function() {
			var message = $('#data').val();
			$('#data').val('');
			// tell server to execute 'sendchat' and send along one parameter
			socket.emit('sendchat', message);
		});

		$('#sendw').click( function() {
			alert("hi");
			if(invalidflag==1)
				alert("Invalid Word");
			else{	
			var x=document.getElementById("turn");
			//var y=document.getElementById("score1");
			//yourscore+=mylettersx.length;
			//x.innerHTML="Opponent turn!";
			//y.innerHTML=yourscore;
			mylettersx=[];
			mylettersy=[];
			for(var k=0;k<mylet.length;k++)
			{
			var ind=values.indexOf(mylet[k]);
			values.splice(ind,1);
			var num=Math.floor((Math.random()*26)+1);
			values.push(alphabets[num]);
			
			}
			for(var k=0; k<7; k++){  
				//alert(values[k]);
				context2.clearRect(k*40,0*40, 40, 40);
				context2.strokeRect(k*40, 0*40, 40, 40);  
				context2.fillStyle = "blue";
				context2.font = "bold 32px Arial";
				context2.fillText(values[k], k*40+10, 0*40+30);
			} 
			mylet=[];

			// tell server to execute 'sendchat' and send along one parameter
			socket.emit('sendword',board,flag,yourscore);
			}

		});

		// when the client hits ENTER on their keyboard
		$('#data').keypress(function(e) {
			if(e.which == 13) {
				$(this).blur();
				$('#datasend').focus().click();
			}
		});
	});

function blank(){
var flag1=true;
	for(var i=0;i<10;i++){
		for(var j=0;j<10;j++){
		if(flag[i][j]==1){
			//alert("flag=1 for i="+i+" j="+j);
			for(g=0;g<mylettersx.length;g++){
				//alert("x="+mylettersx[g]+" y="+mylettersy[g]);
				if(i!=mylettersy[g] && j!=mylettersx[g]){
			//	alert("x="+mylettersx[g]+" y="+mylettersy[g]);		
				flag1=false;
				}
			}
			
    		}
}
	}
	if(flag1)
		gamestart=false;

}
</script>



</body>
</html>
